[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
	autocmd StdinReadPre * let s:std_in=1
	autocmd VimEnter * if argc() == 0 && !exists('s:std_in') | NERDTree | endif
    map <C-n> :NERDTreeToggle<CR>
'''

[[plugins]]
repo = 'easymotion/vim-easymotion'
hook_add = '''
" EasyMotionのdefault設定を解除
let g:EasyMotion_do_mapping = 0
" Leader Keyの設定
let g:mapleader = "\<Space>"
" <Leader>f{char} to move to {char}
map  <Leader>f <Plug>(easymotion-bd-f)
nmap <Leader>f <Plug>(easymotion-overwin-f)

" s{char}{char} to move to {char}{char}
nmap <leader>s <Plug>(easymotion-overwin-f2)
map <leader>s <Plug>(easymotion-overwin-f2)

" Move to line
map <Leader>L <Plug>(easymotion-bd-jk)
nmap <Leader>L <Plug>(easymotion-overwin-line)

" Move to word
map  <Leader>w <Plug>(easymotion-bd-w)
nmap <Leader>w <Plug>(easymotion-overwin-w)
'''

[[plugins]]
repo = 'kqito/vim-easy-replace'

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
repo = 'unblevable/quick-scope'
hook_add = '''
    highlight QuickScopePrimary guifg='#afff5f' gui=underline ctermfg=155 cterm=underline
    highlight QuickScopeSecondary guifg='#5fffff' gui=underline ctermfg=81 cterm=underline
'''

[[plugins]]
repo = 't9md/vim-quickhl'
hook_add = '''
	nmap <Space>m <Plug>(quickhl-manual-this)
	xmap <Space>m <Plug>(quickhl-manual-this)
	nmap <Space>M <Plug>(quickhl-manual-reset)
	xmap <Space>M <Plug>(quickhl-manual-reset)
    " Color Settings
    let g:quickhl_manual_colors = [
    \ "gui=bold ctermfg=16  ctermbg=153 guifg=#ffffff guibg=#0a7383",
    \ "gui=bold ctermfg=7   ctermbg=1   guibg=#a07040 guifg=#ffffff",
    \ "gui=bold ctermfg=7   ctermbg=2   guibg=#4070a0 guifg=#ffffff",
    \ "gui=bold ctermfg=7   ctermbg=3   guibg=#40a070 guifg=#ffffff",
    \ ]
'''

[[plugins]]
# 画面分割時に<C-E>でウインドウのリサイズモード、H,J,K,Lでリサイズ
repo = 'simeji/winresizer'

[[plugins]]
# vim-lsp
repo = 'prabirshrestha/vim-lsp'

[[plugins]]
# vim-settings
repo = 'mattn/vim-lsp-settings'

[[plugins]]
# nvim-lspconfig
repo = 'neovim/nvim-lspconfig'
hook_add = '''
source ~/.config/nvim/plugins/nvim-lspconfig.vim
'''

[[plugins]]
repo = 'uga-rosa/ddc-nvim-lsp-setup'

[[plugins]]
# ddc-source-nvim-lsp
repo = 'Shougo/ddc-source-nvim-lsp'
hook_add = '''
lua << EOF

local capabilities = require("ddc_nvim_lsp").make_client_capabilities()
require("lspconfig").denols.setup({
  capabilities = capabilities,
})

require("ddc_nvim_lsp_setup").setup()

EOF

call ddc#custom#patch_global('sources', ['nvim-lsp'])
call ddc#custom#patch_global('sourceOptions', #{
      \   nvim-lsp: #{
      \     mark: 'lsp',
      \     forceCompletionPattern: '\.\w*|:\w*|->\w*',
      \   },
      \ })

call ddc#custom#patch_global('sourceParams', #{
      \   nvim-lsp: #{
      \     snippetEngine: denops#callback#register({
      \           body -> vsnip#anonymous(body)
      \     }),
      \     enableResolveItem: v:true,
      \     enableAdditionalTextEdit: v:true,
      \   }
      \ })
'''

[[plugins]]
repo = 'roxma/nvim-yarp'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'

[[plugins]]
# wild menuにおける補完
repo = 'gelguy/wilder.nvim'
hook_add = '''
" Default keys
call wilder#setup({
      \ 'modes': [':', '/', '?'],
      \ 'next_key': '<Tab>',
      \ 'previous_key': '<S-Tab>',
      \ 'accept_key': '<Down>',
      \ 'reject_key': '<Up>',
      \ })
'''

[[plugins]]
# ddc.vim本体
repo = 'Shougo/ddc.vim'
hook_add = '''
source ~/.config/nvim/plugins/ddc.vim
" source ./plugins/ddc.vim
'''

[[plugins]]
# DenoでVimプラグインを開発するためのプラグイン
repo = 'vim-denops/denops.vim'

[[plugins]]
# カーソル周辺の既出単語を補完するsource
repo = 'Shougo/ddc-around'

[[plugins]]
# ファイル名を補完するsource
repo = 'LumaKernel/ddc-file'

[[plugins]]
# 入力中の単語を補完の対象にするfilter
repo = 'Shougo/ddc-matcher_head'

[[plugins]]
# 補完候補を適切にソートするfilter
repo = 'Shougo/ddc-sorter_rank'

[[plugins]]
# 補完候補の重複を防ぐためのfilter
repo = 'Shougo/ddc-converter_remove_overlap'

[[plugins]]
repo = 'Shougo/ddc-ui-pum'

[[plugins]]
# ポップアップウィンドウを表示するプラグイン
repo = 'Shougo/pum.vim'
hook_add = '''
source ~/.config/nvim/plugins/pum.vim
'''

[[plugins]]
# C++用フォーマッター
repo = 'rhysd/vim-clang-format'
hook_add = '''
source ~/.config/nvim/plugins/vim_clang_format.vim
'''

[[plugins]]
# 独自のoperatorを定義する
repo = 'kana/vim-operator-user'

[[plugins]]
# DeepL
repo = 'ryicoh/deepl.vim'
hook_add = '''
source ~/.config/nvim/plugins/deepl.vim
'''
